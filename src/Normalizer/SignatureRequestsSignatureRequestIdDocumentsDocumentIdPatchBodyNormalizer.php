<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace IIYousign\Normalizer;

use IIYousign\Runtime\Normalizer\CheckArray;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SignatureRequestsSignatureRequestIdDocumentsDocumentIdPatchBodyNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;

    public function supportsDenormalization($data, $type, $format = null): bool
    {
        return $type === 'IIYousign\\Model\\SignatureRequestsSignatureRequestIdDocumentsDocumentIdPatchBody';
    }

    public function supportsNormalization($data, $format = null): bool
    {
        return is_object($data) && get_class($data) === 'IIYousign\\Model\\SignatureRequestsSignatureRequestIdDocumentsDocumentIdPatchBody';
    }

    /**
     * @return mixed
     */
    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \IIYousign\Model\SignatureRequestsSignatureRequestIdDocumentsDocumentIdPatchBody();
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('nature', $data)) {
            $object->setNature($data['nature']);
        }
        if (\array_key_exists('insert_after_id', $data) && $data['insert_after_id'] !== null) {
            $object->setInsertAfterId($data['insert_after_id']);
        } elseif (\array_key_exists('insert_after_id', $data) && $data['insert_after_id'] === null) {
            $object->setInsertAfterId(null);
        }
        if (\array_key_exists('password', $data)) {
            $object->setPassword($data['password']);
        }
        if (\array_key_exists('initials', $data) && $data['initials'] !== null) {
            $object->setInitials($data['initials']);
        } elseif (\array_key_exists('initials', $data) && $data['initials'] === null) {
            $object->setInitials(null);
        }

        return $object;
    }

    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = [])
    {
        $data = [];
        if (null !== $object->getNature()) {
            $data['nature'] = $object->getNature();
        }
        if (null !== $object->getInsertAfterId()) {
            $data['insert_after_id'] = $object->getInsertAfterId();
        }
        if (null !== $object->getPassword()) {
            $data['password'] = $object->getPassword();
        }
        if (null !== $object->getInitials()) {
            $data['initials'] = $object->getInitials();
        }

        return $data;
    }
}
