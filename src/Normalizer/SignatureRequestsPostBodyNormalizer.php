<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace IIYousign\Normalizer;

use IIYousign\Runtime\Normalizer\CheckArray;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SignatureRequestsPostBodyNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;

    public function supportsDenormalization($data, $type, $format = null): bool
    {
        return $type === 'IIYousign\\Model\\SignatureRequestsPostBody';
    }

    public function supportsNormalization($data, $format = null): bool
    {
        return is_object($data) && get_class($data) === 'IIYousign\\Model\\SignatureRequestsPostBody';
    }

    /**
     * @return mixed
     */
    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \IIYousign\Model\SignatureRequestsPostBody();
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('name', $data)) {
            $object->setName($data['name']);
        }
        if (\array_key_exists('delivery_mode', $data)) {
            $object->setDeliveryMode($data['delivery_mode']);
        }
        if (\array_key_exists('ordered_signers', $data) && $data['ordered_signers'] !== null) {
            $object->setOrderedSigners($data['ordered_signers']);
        } elseif (\array_key_exists('ordered_signers', $data) && $data['ordered_signers'] === null) {
            $object->setOrderedSigners(null);
        }
        if (\array_key_exists('reminder_settings', $data) && $data['reminder_settings'] !== null) {
            $object->setReminderSettings($this->denormalizer->denormalize($data['reminder_settings'], 'IIYousign\\Model\\SignatureRequestsPostBodyReminderSettings', 'json', $context));
        } elseif (\array_key_exists('reminder_settings', $data) && $data['reminder_settings'] === null) {
            $object->setReminderSettings(null);
        }
        if (\array_key_exists('timezone', $data) && $data['timezone'] !== null) {
            $object->setTimezone($data['timezone']);
        } elseif (\array_key_exists('timezone', $data) && $data['timezone'] === null) {
            $object->setTimezone(null);
        }
        if (\array_key_exists('email_custom_note', $data) && $data['email_custom_note'] !== null) {
            $object->setEmailCustomNote($data['email_custom_note']);
        } elseif (\array_key_exists('email_custom_note', $data) && $data['email_custom_note'] === null) {
            $object->setEmailCustomNote(null);
        }
        if (\array_key_exists('expiration_date', $data) && $data['expiration_date'] !== null) {
            $object->setExpirationDate(\DateTime::createFromFormat('Y-m-d', $data['expiration_date'])->setTime(0, 0, 0));
        } elseif (\array_key_exists('expiration_date', $data) && $data['expiration_date'] === null) {
            $object->setExpirationDate(null);
        }
        if (\array_key_exists('template_id', $data) && $data['template_id'] !== null) {
            $object->setTemplateId($data['template_id']);
        } elseif (\array_key_exists('template_id', $data) && $data['template_id'] === null) {
            $object->setTemplateId(null);
        }
        if (\array_key_exists('external_id', $data) && $data['external_id'] !== null) {
            $object->setExternalId($data['external_id']);
        } elseif (\array_key_exists('external_id', $data) && $data['external_id'] === null) {
            $object->setExternalId(null);
        }
        if (\array_key_exists('branding_id', $data) && $data['branding_id'] !== null) {
            $object->setBrandingId($data['branding_id']);
        } elseif (\array_key_exists('branding_id', $data) && $data['branding_id'] === null) {
            $object->setBrandingId(null);
        }
        if (\array_key_exists('documents', $data) && $data['documents'] !== null) {
            $values = [];
            foreach ($data['documents'] as $value) {
                $values[] = $value;
            }
            $object->setDocuments($values);
        } elseif (\array_key_exists('documents', $data) && $data['documents'] === null) {
            $object->setDocuments(null);
        }
        if (\array_key_exists('signers', $data) && $data['signers'] !== null) {
            $values_1 = [];
            foreach ($data['signers'] as $value_1) {
                $values_1[] = $this->denormalizer->denormalize($value_1, 'IIYousign\\Model\\SignatureRequestSignerFromInfoInput', 'json', $context);
            }
            $object->setSigners($values_1);
        } elseif (\array_key_exists('signers', $data) && $data['signers'] === null) {
            $object->setSigners(null);
        }
        if (\array_key_exists('custom_text', $data) && $data['custom_text'] !== null) {
            $object->setCustomText($this->denormalizer->denormalize($data['custom_text'], 'IIYousign\\Model\\SignatureRequestsPostBodyCustomText', 'json', $context));
        } elseif (\array_key_exists('custom_text', $data) && $data['custom_text'] === null) {
            $object->setCustomText(null);
        }

        return $object;
    }

    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = [])
    {
        $data = [];
        if (null !== $object->getName()) {
            $data['name'] = $object->getName();
        }
        if (null !== $object->getDeliveryMode()) {
            $data['delivery_mode'] = $object->getDeliveryMode();
        }
        if (null !== $object->getOrderedSigners()) {
            $data['ordered_signers'] = $object->getOrderedSigners();
        }
        if (null !== $object->getReminderSettings()) {
            $data['reminder_settings'] = $this->normalizer->normalize($object->getReminderSettings(), 'json', $context);
        }
        if (null !== $object->getTimezone()) {
            $data['timezone'] = $object->getTimezone();
        }
        if (null !== $object->getEmailCustomNote()) {
            $data['email_custom_note'] = $object->getEmailCustomNote();
        }
        if (null !== $object->getExpirationDate()) {
            $data['expiration_date'] = $object->getExpirationDate()->format('Y-m-d');
        }
        if (null !== $object->getTemplateId()) {
            $data['template_id'] = $object->getTemplateId();
        }
        if (null !== $object->getExternalId()) {
            $data['external_id'] = $object->getExternalId();
        }
        if (null !== $object->getBrandingId()) {
            $data['branding_id'] = $object->getBrandingId();
        }
        if (null !== $object->getDocuments()) {
            $values = [];
            foreach ($object->getDocuments() as $value) {
                $values[] = $value;
            }
            $data['documents'] = $values;
        }
        if (null !== $object->getSigners()) {
            $values_1 = [];
            foreach ($object->getSigners() as $value_1) {
                $values_1[] = $this->normalizer->normalize($value_1, 'json', $context);
            }
            $data['signers'] = $values_1;
        }
        if (null !== $object->getCustomText()) {
            $data['custom_text'] = $this->normalizer->normalize($object->getCustomText(), 'json', $context);
        }

        return $data;
    }
}
