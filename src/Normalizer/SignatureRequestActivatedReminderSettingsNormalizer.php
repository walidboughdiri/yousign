<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace IIYousign\Normalizer;

use IIYousign\Runtime\Normalizer\CheckArray;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SignatureRequestActivatedReminderSettingsNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;

    public function supportsDenormalization($data, $type, $format = null): bool
    {
        return $type === 'IIYousign\\Model\\SignatureRequestActivatedReminderSettings';
    }

    public function supportsNormalization($data, $format = null): bool
    {
        return is_object($data) && get_class($data) === 'IIYousign\\Model\\SignatureRequestActivatedReminderSettings';
    }

    /**
     * @return mixed
     */
    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \IIYousign\Model\SignatureRequestActivatedReminderSettings();
        if (\array_key_exists('interval_in_days', $data) && \is_int($data['interval_in_days'])) {
            $data['interval_in_days'] = (float) $data['interval_in_days'];
        }
        if (\array_key_exists('max_occurrences', $data) && \is_int($data['max_occurrences'])) {
            $data['max_occurrences'] = (float) $data['max_occurrences'];
        }
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('interval_in_days', $data)) {
            $object->setIntervalInDays($data['interval_in_days']);
        }
        if (\array_key_exists('max_occurrences', $data)) {
            $object->setMaxOccurrences($data['max_occurrences']);
        }

        return $object;
    }

    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = [])
    {
        $data = [];
        if (null !== $object->getIntervalInDays()) {
            $data['interval_in_days'] = $object->getIntervalInDays();
        }
        if (null !== $object->getMaxOccurrences()) {
            $data['max_occurrences'] = $object->getMaxOccurrences();
        }

        return $data;
    }
}
